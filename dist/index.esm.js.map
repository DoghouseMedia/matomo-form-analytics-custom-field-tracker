{"version":3,"file":"index.esm.js","sources":["../src/Enums/FieldCategories.js","../src/CustomFields/BaseField.js","../src/CustomFields/WysiwygField.js","../src/CustomFields/RatingField.js","../src/CustomFields/ImageSelectorField.js","../src/CustomFields/index.js","../src/FormAnalyticsCustomFieldTracker.js"],"sourcesContent":["/**\n * Field Categories Enum\n *\n * Defines the three field categories supported by Matomo FormAnalytics\n * - FIELD_TEXT: Text-based input fields\n * - FIELD_SELECTABLE: Selection-based fields\n * - FIELD_CHECKABLE: Checkbox/radio fields\n *\n * @enum {string}\n */\nexport const FieldCategories = {\n    /**\n     * Text-based input fields (password, text, url, tel, email, search, textarea)\n     */\n    TEXT: 'FIELD_TEXT',\n    /**\n     * Selection-based fields (color, date, datetime, datetime-local, month, number, range, time, week, select)\n     */\n    SELECTABLE: 'FIELD_SELECTABLE',\n    /**\n     * Checkbox/radio fields (radio, checkbox)\n     */\n    CHECKABLE: 'FIELD_CHECKABLE'\n};\n\n/**\n * Validates if a field category is supported by Matomo\n * @param {string} category - Field category to validate\n * @returns {boolean} True if category is valid\n */\nexport function isValidFieldCategory(category) {\n    return Object.values(FieldCategories).includes(category);\n}\n\n/**\n * Gets all supported field categories\n * @returns {string[]} Array of all supported field categories\n */\nexport function getSupportedFieldCategories() {\n    return Object.values(FieldCategories);\n}\n\n/**\n * Gets field category description\n * @param {string} category - Field category\n * @returns {string} Human-readable description\n */\nexport function getFieldCategoryDescription(category) {\n    const descriptions = {\n        [FieldCategories.TEXT]: 'Text-based input fields (password, text, url, tel, email, search, textarea)',\n        [FieldCategories.SELECTABLE]: 'Selection-based fields (color, date, datetime, datetime-local, month, number, range, time, week, select)',\n        [FieldCategories.CHECKABLE]: 'Checkbox/radio fields (radio, checkbox)'\n    };\n\n    return descriptions[category] || 'Unknown field category';\n}\n","import { FieldCategories } from '../Enums/FieldCategories.js';\n\n/**\n * BaseField Class\n *\n * A reusable abstract class providing shared tracking logic\n * for all custom form field types (e.g., WYSIWYG, rating, image selector).\n *\n * @class BaseField\n * @abstract\n */\nexport class BaseField {\n    /**\n     * Field Categories ENUM - Available to all subclasses\n     * @static\n     */\n    static FieldCategories = FieldCategories;\n\n    /**\n     * Required static properties for field classes:\n     * \n     * @static {string} fieldType - Unique identifier for the field type (e.g., 'wysiwyg', 'rating')\n     * @static {string} category - Field category from FieldCategories enum\n     * @static {string} selector - CSS selector to find elements for this field type (required for automatic detection)\n     * \n     * Example:\n     * static fieldType = 'myField';\n     * static category = BaseField.FieldCategories.TEXT;\n     * static selector = '.my-field[data-name]';\n     */\n\n    /**\n     * Creates a new BaseField instance\n     *\n     * @param {Object} tracker - Matomo tracker instance\n     * @param {HTMLElement} element - DOM element for the field\n     * @param {string} fieldName - Unique identifier for the field\n     * @param {string} fieldType - Type of field (wysiwyg, rating, etc.)\n     * @param {string} category - Matomo field category (FIELD_TEXT, FIELD_SELECTABLE, etc.)\n     */\n    constructor(tracker, element, fieldName) {\n        // Get fieldType and category from static properties\n        const fieldType = this.constructor.fieldType;\n        const category = this.constructor.category;\n        const selector = this.constructor.selector;\n\n        if (!fieldType || !category) {\n            throw new Error(`${this.constructor.name} must define static fieldType and category properties`);\n        }\n\n        if (!selector) {\n            throw new Error(`${this.constructor.name} must define a static selector property for automatic field detection`);\n        }\n\n        // Common properties for all field types\n        this.discoveredDate = Date.now();\n        this.timespent = 0;\n        this.hesitationtime = 0;\n        this.nodes = [element];\n        this.tagName = 'div';\n        this.fieldName = fieldName;\n        this.fieldType = fieldType;\n        this.startFocus = null;\n        this.timeLastChange = null;\n        this.numChanges = 0;\n        this.numFocus = 0;\n        this.numDeletes = 0;\n        this.numCursor = 0;\n        this.canCountChange = true;\n        this.isFocusedCausedAuto = false;\n        this.hasChangedValueSinceFocus = false;\n        this.tracker = tracker;\n        this.category = category;\n\n        // Store references for field-specific implementations\n        this.element = element;\n\n        // // Set up event listeners for all custom fields\n        // this.setupEventListeners();\n    }\n\n    /**\n     * Abstract method: Gets the interactive element for this field\n     * Must be implemented by subclasses to define their interactive element\n     * @abstract\n     * @returns {HTMLElement|NodeList} Interactive element for this field\n     * @throws {Error} If not implemented by subclass\n     */\n    getInteractiveElement() {\n        throw new Error(`getInteractiveElement() must be implemented by ${this.fieldType} field`);\n    }\n\n    /**\n     * Abstract method: Determines if field is blank/empty\n     * Must be implemented by subclasses\n     * @abstract\n     * @returns {boolean} True if field is blank, false otherwise\n     * @throws {Error} If not implemented by subclass\n     */\n    isBlank() {\n        throw new Error(`isBlank() must be implemented by ${this.fieldType} field`);\n    }\n\n    /**\n     * Abstract method: Gets field size/content length\n     * Must be implemented by subclasses\n     * @abstract\n     * @returns {number} Field size (content length, rating value, etc.)\n     * @throws {Error} If not implemented by subclass\n     */\n    getFieldSize() {\n        throw new Error(`getFieldSize() must be implemented by ${this.fieldType} field`);\n    }\n\n    /**\n     * Sets up event listeners for all custom field types\n     * This method provides common event handling for all custom fields\n     * Can be overridden by subclasses for custom event handling\n     */\n    setupEventListeners() {\n        // Check if the subclass has overridden this method.\n        if (this.constructor.prototype.setupEventListeners !== BaseField.prototype.setupEventListeners) {\n            // Subclass has its own implementation, call it\n            this.constructor.prototype.setupEventListeners.call(this);\n            return;\n        }\n\n        // Default implementation for fields that don't override\n        this.setupDefaultEventListeners();\n    }\n\n    /**\n     * Sets up default event listeners for standard field types\n     * Used by fields that don't need custom event handling\n     */\n    setupDefaultEventListeners() {\n        // Get the actual interactive element (overridden by subclasses)\n        const interactiveElement = this.getInteractiveElement();\n\n        if (!interactiveElement) {\n            console.error(`${this.fieldType.toUpperCase()} interactive element not found:`, this.element);\n            return;\n        }\n\n        // Focus event\n        interactiveElement.addEventListener('focus', () => {\n            this.onFocus();\n        });\n\n        // Blur event\n        interactiveElement.addEventListener('blur', () => {\n            this.onBlur();\n        });\n\n        // Input event (typing)\n        interactiveElement.addEventListener('input', () => {\n            this.onChange();\n        });\n\n        // Keydown event (cursor movements, deletions)\n        interactiveElement.addEventListener('keydown', (event) => {\n            this.handleKeydown(event);\n        });\n\n        // Click event (cursor movements)\n        interactiveElement.addEventListener('click', () => {\n            this.trackCursorMovement();\n            console.log(`⚡️ ${this.fieldType.toUpperCase()} click:`, this.fieldName);\n        });\n    }\n\n    /**\n     * Handles keydown events for cursor and deletion tracking\n     * Tracks arrow keys, home/end, and backspace/delete\n     * @param {KeyboardEvent} event - Keyboard event object\n     */\n    handleKeydown(event) {\n        // Track cursor movements\n        const cursorKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Home', 'End', 'PageUp', 'PageDown'];\n        if (cursorKeys.includes(event.key)) {\n            this.trackCursorMovement();\n            console.log(`${this.fieldType.toUpperCase()} cursor movement:`, event.key);\n        }\n\n        // Track deletions\n        if (event.key === 'Backspace' || event.key === 'Delete') {\n            this.trackDeletion();\n            console.log(`${this.fieldType.toUpperCase()} deletion:`, event.key);\n        }\n    }\n\n    /**\n     * Adds a DOM node to this field's node collection\n     * @param {HTMLElement} node - DOM node to add\n     */\n    addNode(node) {\n        this.nodes.push(node);\n    }\n\n    /**\n     * Resets all tracking counters when form is submitted\n     * Called automatically by Matomo tracker on form submission\n     */\n    resetOnFormSubmit() {\n        this.timespent = 0;\n        this.numFocus = 0;\n        this.numDeletes = 0;\n        this.numCursor = 0;\n        this.numChanges = 0;\n        this.startFocus = null;\n        this.timeLastChange = null;\n        this.canCountChange = true;\n        this.hasChangedValueSinceFocus = false;\n        this.isFocusedCausedAuto = false;\n    }\n\n    /**\n     * Calculates total time spent in this field\n     * Includes both tracked time and current session time\n     * @returns {number} Time spent in milliseconds\n     */\n    getTimeSpent() {\n        if (this.numChanges && !this.timespent) {\n            this.timespent = 1;\n        }\n        if (!this.startFocus || this.isFocusedCausedAuto) {\n            return this.timespent;\n        }\n        if (this.timeLastChange) {\n            const timeSpent = this.timeLastChange - this.startFocus;\n            return this.timespent + (timeSpent > 0 ? timeSpent : 0);\n        }\n        return this.timespent + (Date.now() - this.startFocus);\n    }\n\n    /**\n     * Calculates hesitation time before first interaction\n     * Time from field detection to first user interaction\n     * @returns {number} Hesitation time in milliseconds\n     */\n    getHesitationTime() {\n        if (this.numChanges || !this.startFocus || this.isFocusedCausedAuto) {\n            return this.hesitationtime;\n        }\n        return this.hesitationtime + (Date.now() - this.startFocus);\n    }\n\n    /**\n     * Generates tracking parameters for Matomo FormAnalytics\n     * Returns all field metrics in Matomo-compatible format\n     * @returns {Object} Object containing all tracking parameters\n     */\n    getTrackingParams() {\n        return {\n            fa_fn: this.fieldName,\n            fa_ft: this.fieldType,\n            fa_fs: this.getFieldSize(),\n            fa_fb: this.isBlank() ? 1 : 0,\n            fa_fts: this.getTimeSpent(),\n            fa_fht: this.getHesitationTime(),\n            fa_ff: this.numFocus,\n            fa_fch: this.numChanges,\n            fa_fd: this.numDeletes,\n            fa_fcu: this.numCursor\n        };\n    }\n\n    /**\n     * Handles field focus event\n     * Tracks focus count, sets entry field, and triggers Matomo tracking\n     */\n    onFocus() {\n        console.log(`⚡️ ${this.fieldType.toUpperCase()} focus (${this.fieldName})`);\n        this.startFocus = Date.now();\n        const isNewField = this.fieldName !== this.tracker.lastFocusedFieldName;\n\n        if (isNewField && !this.isFocusedCausedAuto) {\n            this.numFocus++;\n            this.tracker.setEngagedWithForm();\n            this.tracker.trackFieldUpdate(this);\n            this.tracker.exitFieldName = this.fieldName;\n            this.tracker.scheduleSendUpdate();\n        }\n\n        this.tracker.lastFocusedFieldName = this.fieldName;\n        this.canCountChange = true;\n    }\n\n    /**\n     * Handles field blur event\n     * Calculates time spent and updates tracking data\n     */\n    onBlur() {\n        console.log(`⚡️ ${this.fieldType.toUpperCase()} blur (${this.fieldName})`);\n        if (!this.startFocus) return;\n\n        if (this.hasChangedValueSinceFocus) {\n            if (this.timeLastChange && this.startFocus) {\n                this.timespent += (this.timeLastChange - this.startFocus);\n            }\n            this.timeLastChange = null;\n            this.startFocus = null;\n            return;\n        }\n\n        if (!this.isFocusedCausedAuto) {\n            const now = Date.now();\n            this.timespent += now - this.startFocus;\n            if (!this.numChanges) {\n                this.hesitationtime += now - this.startFocus;\n            }\n            this.tracker.setEngagedWithForm();\n            this.tracker.trackFieldUpdate(this);\n        }\n        this.startFocus = null;\n    }\n\n    /**\n     * Handles field change event\n     * Tracks changes, hesitation time, and sets entry field\n     */\n    onChange() {\n        console.log(`⚡️ ${this.fieldType.toUpperCase()} changed (${this.fieldName})`);\n        this.timeLastChange = Date.now();\n        if (this.isFocusedCausedAuto) {\n            this.startFocus = this.timeLastChange;\n        } else if (!this.startFocus) {\n            return;\n        }\n\n        this.isFocusedCausedAuto = false;\n        this.hasChangedValueSinceFocus = true;\n\n        if (!this.numChanges) {\n            this.hesitationtime += this.timeLastChange - this.startFocus;\n        }\n\n        if (this.canCountChange) {\n            this.numChanges++;\n            this.canCountChange = false;\n        }\n\n        if (!this.tracker.entryFieldName) {\n            this.tracker.entryFieldName = this.fieldName;\n        }\n\n        this.tracker.setEngagedWithForm();\n        this.tracker.trackFieldUpdate(this);\n    }\n\n    /**\n     * Helper method for tracking cursor movements\n     * Increments cursor count for arrow keys, clicks, etc.\n     */\n    trackCursorMovement() {\n        this.numCursor++;\n    }\n\n    /**\n     * Helper method for tracking deletions\n     * Increments delete count for backspace, delete keys, etc.\n     */\n    trackDeletion() {\n        this.numDeletes++;\n    }\n}\n","import { BaseField } from './BaseField.js';\n\n/**\n * WYSIWYG Field Creator\n * Handles contenteditable div elements with ProseMirror editor\n *\n * @class WysiwygField\n * @extends BaseField\n */\nexport class WysiwygField extends BaseField {\n    static fieldType = 'wysiwyg';\n    static category = BaseField.FieldCategories.TEXT;\n    static selector = '.formulate-input-element--wysiwyg[data-name]';\n\n    /**\n     * @inheritDoc\n     */\n    constructor(tracker, element, fieldName) {\n        super(tracker, element, fieldName);\n        this.editor = this.getInteractiveElement();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getInteractiveElement() {\n        return this.element.querySelector('.ProseMirror[contenteditable=\"true\"]');\n    }\n\n    /**\n     * @inheritDoc\n     */\n    isBlank() {\n        if (!this.editor) return true;\n        const content = this.editor.innerText || this.editor.textContent || '';\n        return content.trim().length === 0;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getFieldSize() {\n        if (!this.editor) return 0;\n        const content = this.editor.innerText || this.editor.textContent || '';\n        return content.length;\n    }\n}\n","import { BaseField } from './BaseField.js';\n\n/**\n * Rating Field Creator\n * Handles star rating elements with click-based selection\n *\n * @class RatingField\n * @extends BaseField\n */\nexport class RatingField extends BaseField {\n    static fieldType = 'rating';\n    static category = BaseField.FieldCategories.SELECTABLE;\n    static selector = '.formulate-input-element--rating-container[data-name]';\n\n    /**\n     * @inheritDoc\n     */\n    constructor(tracker, element, fieldName) {\n        super(tracker, element, fieldName);\n        this.stars = this.getInteractiveElement();\n        this.lastRating = this.getFieldSize();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getInteractiveElement() {\n        return this.element.querySelectorAll('.star-full');\n    }\n\n    /**\n     * @inheritDoc\n     */\n    isBlank() {\n        const filledStars = this.element.querySelectorAll('.star-full .icon-full');\n        return filledStars.length === 0;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getFieldSize() {\n        const filledStars = this.element.querySelectorAll('.star-full .icon-full');\n        return filledStars.length;\n    }\n\n    /**\n     * Sets up custom event listeners for rating field\n     * Overrides BaseField's setupEventListeners for custom star handling\n     */\n    setupEventListeners() {\n        if (this.stars.length === 0) {\n            console.error('Rating stars not found:', this.element);\n            return;\n        }\n\n        // Set up click events on each star\n        this.stars.forEach((star, index) => {\n            star.addEventListener('click', () => {\n                this.handleStarClick(index + 1);\n            });\n        });\n    }\n\n    /**\n     * Handles star click events\n     * Tracks rating changes and deletions (rating decreases)\n     *\n     * @param {number} rating - New rating value\n     */\n    handleStarClick(rating) {\n        const prevRating = this.lastRating;\n        const newRating = rating === prevRating ? 0 : rating;\n\n        console.log(`⚡️ RATING changed from ${prevRating} to ${newRating} (${this.fieldName})`);\n        // Simulate focus if this is the first interaction with the form\n        this.onFocus();\n        // Update stored rating for next click\n        this.lastRating = newRating;\n\n        // Always track as change since something happened\n        this.onChange();\n\n        // Track rating changes as \"deletions\" if the rating decreased\n        if (newRating < prevRating) {\n            this.trackDeletion();\n            console.log(`⚡️ RATING decreased from ${prevRating} to ${newRating} (${this.fieldName})`);\n        }\n\n        // Simulate blur after a short delay to complete\n        // the focus → change → blur cycle\n        setTimeout(() => {\n            this.onBlur();\n        }, 100);\n    }\n}\n","import { BaseField } from './BaseField.js';\n\n/**\n * Image Selector Field Creator\n * Handles image selection elements with click-based selection\n *\n * @class ImageSelectorField\n * @extends BaseField\n */\nexport class ImageSelectorField extends BaseField {\n    static fieldType = 'imageSelector';\n    static category = BaseField.FieldCategories.CHECKABLE;\n    static selector = '.formulate-input-element--image_selection[data-name]';\n\n    /**\n     * @inheritDoc\n     */\n    constructor(tracker, element, fieldName) {\n        super(tracker, element, fieldName);\n        this.imageContainers = this.getInteractiveElement();\n        this.lastSelectedValue = this.getSelectedValue();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getInteractiveElement() {\n        return this.element.querySelectorAll('.engage-image-selector--container');\n    }\n\n    /**\n     * @inheritDoc\n     */\n    isBlank() {\n        // Follows Matomo's tracker logic: return false if any image is selected\n        return this.getSelectedImages().length === 0;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getFieldSize() {\n        // Follow Matomo's tracker logic: return -1 for FIELD_CHECKABLE fields\n        return -1;\n    }\n\n    /**\n     * Gets currently selected images from DOM\n     * @returns {NodeList} NodeList of selected image elements\n     */\n    getSelectedImages() {\n        return this.element.querySelectorAll('.engage-image-selector--container.selected');\n    }\n\n    /**\n     * Gets the value of the currently selected image\n     * @returns {string|null} The selected image value or null if none selected\n     */\n    getSelectedValue() {\n        const selected = this.element.querySelector('.engage-image-selector--container.selected');\n        if (!selected) return null;\n\n        const radio = selected.querySelector('input[type=\"radio\"]');\n        return radio?.value || null;\n    }\n\n    /**\n     * Sets up custom event listeners for image selector field\n     * Overrides BaseField's setupEventListeners for custom image handling\n     */\n    setupEventListeners() {\n        if (!this.imageContainers.length) {\n            console.error('Image containers not found:', this.element);\n            return;\n        }\n\n        // Set up click events on each image container\n        this.imageContainers.forEach((container, index) => {\n            container.addEventListener('click', () => this.handleImageClick(index + 1))\n        });\n    }\n\n    /**\n     * Handles image click events\n     * Tracks image selection changes and deletions (deselections)\n     *\n     * @param {number} imageIndex - Index of clicked image (1-based)\n     */\n    handleImageClick(_imageIndex) {\n        const prevSelectedValue = this.lastSelectedValue;\n        this.onFocus();\n\n        // Wait for DOM to update, then get new selected value\n        setTimeout(() => {\n            const newSelectedValue = this.getSelectedValue();\n\n            console.log(`⚡️ IMAGE SELECTOR changed from \"${prevSelectedValue}\" to \"${newSelectedValue}\" (${this.fieldName})`);\n\n            // Update stored selected value for next click\n            this.lastSelectedValue = newSelectedValue;\n\n            // Always track as change since something happened\n            this.onChange();\n\n            // Track deselections as \"deletions\" if value changed from something to null\n            if (prevSelectedValue && !newSelectedValue) {\n                this.trackDeletion();\n                console.log(`⚡️ IMAGE SELECTOR deselected (${this.fieldName})`);\n            }\n\n            // Simulate blur after a short delay to complete\n            // the focus → change → blur cycle\n            setTimeout(() => this.onBlur(), 100);\n        }, 50); // Small delay to let DOM update\n    }\n}\n","import { WysiwygField } from './WysiwygField.js';\nimport { RatingField } from './RatingField.js';\nimport { ImageSelectorField } from './ImageSelectorField.js';\n\n/**\n * Field Classes Registry\n * Maps field types to their corresponding classes\n */\nexport const fieldClasses = {\n    wysiwyg: WysiwygField,\n    rating: RatingField,\n    imageSelector: ImageSelectorField\n};\n\n/**\n * Factory function for creating fields of any type\n * Uses the factory pattern to create field instances based on type\n *\n * @param {Object} tracker - Matomo tracker instance\n * @param {HTMLElement} element - DOM element\n * @param {string} fieldName - Field identifier\n * @param {string} fieldType - Type of field to create\n * @returns {BaseField|null} Created field instance or null if type not found\n * @throws {Error} If field creation fails\n */\nexport function createField(tracker, element, fieldName, fieldType) {\n    const FieldClass = fieldClasses[fieldType];\n    if (!FieldClass) {\n        console.error(`No field class found for type: ${fieldType}`);\n        return null;\n    }\n\n    try {\n        // Verify the fieldType matches the class's static property\n        if (FieldClass.fieldType !== fieldType) {\n            console.error(`Field type mismatch: expected ${fieldType}, got ${FieldClass.fieldType}`);\n            return null;\n        }\n\n        const field = new FieldClass(tracker, element, fieldName);\n        field.setupEventListeners();\n        return field;\n    } catch (error) {\n        console.error(`Error creating ${fieldType} field:`, error);\n        return null;\n    }\n}\n\n/**\n * Get available field types\n * @returns {string[]} Array of supported field types\n */\nexport function getAvailableFieldTypes() {\n    return Object.keys(fieldClasses);\n}\n\n/**\n * Check if a field type is supported\n * @param {string} fieldType - Field type to check\n * @returns {boolean} True if supported, false otherwise\n */\nexport function isFieldTypeSupported(fieldType) {\n    return fieldType in fieldClasses;\n}\n","// Custom Field Integration for Matomo FormAnalytics\nimport { createField, fieldClasses } from './CustomFields/index.js';\n\nexport default {\n    init() {\n        (function () {\n            'use strict';\n\n            // Wait for FormAnalytics to initialize\n            window.matomoFormAnalyticsAsyncInit = function () {\n                const forms = document.querySelectorAll('form, [data-matomo-form]');\n                forms.forEach(form => {\n                    setTimeout(() => {\n                        const tracker = window.Piwik?.FormAnalytics?.element?.findFormTrackerInstance(form);\n                        if (tracker) {\n                            injectCustomFields(tracker, form);\n                        }\n                    }, 100);\n                });\n            };\n\n            function injectCustomFields(tracker, form) {\n                // Dynamically get field types and their selectors from registered field classes\n                Object.entries(fieldClasses).forEach(([fieldType, FieldClass]) => {\n                    // Check if the field class has a selector defined\n                    if (FieldClass.selector) {\n                        const fields = form.querySelectorAll(FieldClass.selector);\n                        fields.forEach(field => {\n                            const fieldName = field.getAttribute('data-name');\n                            const customField = createField(tracker, field, fieldName, fieldType);\n\n                            if (customField) {\n                                // Add to tracker\n                                tracker.fields.push(customField);\n                                tracker.fieldNodes.push(field);\n\n                                console.log(`✅ Integrated custom ${fieldType} field: ${fieldName}`);\n                            }\n                        });\n                    }\n                });\n            }\n        })();\n    }\n};\n"],"names":["FieldCategories","TEXT","SELECTABLE","CHECKABLE","isValidFieldCategory","category","Object","values","includes","getSupportedFieldCategories","getFieldCategoryDescription","descriptions","BaseField","constructor","tracker","element","fieldName","fieldType","selector","Error","name","discoveredDate","Date","now","timespent","hesitationtime","nodes","tagName","startFocus","timeLastChange","numChanges","numFocus","numDeletes","numCursor","canCountChange","isFocusedCausedAuto","hasChangedValueSinceFocus","getInteractiveElement","isBlank","getFieldSize","setupEventListeners","prototype","call","setupDefaultEventListeners","interactiveElement","console","error","toUpperCase","addEventListener","onFocus","onBlur","onChange","event","handleKeydown","trackCursorMovement","log","cursorKeys","key","trackDeletion","addNode","node","push","resetOnFormSubmit","getTimeSpent","timeSpent","getHesitationTime","getTrackingParams","fa_fn","fa_ft","fa_fs","fa_fb","fa_fts","fa_fht","fa_ff","fa_fch","fa_fd","fa_fcu","isNewField","lastFocusedFieldName","setEngagedWithForm","trackFieldUpdate","exitFieldName","scheduleSendUpdate","entryFieldName","WysiwygField","editor","querySelector","content","innerText","textContent","trim","length","RatingField","stars","lastRating","querySelectorAll","filledStars","forEach","star","index","handleStarClick","rating","prevRating","newRating","setTimeout","ImageSelectorField","imageContainers","lastSelectedValue","getSelectedValue","getSelectedImages","selected","radio","value","container","handleImageClick","_imageIndex","prevSelectedValue","newSelectedValue","fieldClasses","wysiwyg","imageSelector","createField","FieldClass","field","getAvailableFieldTypes","keys","isFieldTypeSupported","init","window","matomoFormAnalyticsAsyncInit","forms","document","form","Piwik","FormAnalytics","findFormTrackerInstance","injectCustomFields","entries","fields","getAttribute","customField","fieldNodes"],"mappings":"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"}